@page "/myorders"
@using System.Runtime.InteropServices
@inject OrdersClient OrdersClient

@attribute [Authorize]

<div class="main">
    @if (ordersWithStatus == null)
    {
        <text>Loading...</text>
    }
    else if (!ordersWithStatus.Any())
    {
        <h2>No orders placed</h2>
        <a href="" class="btn btn-success">Order some pizza</a>
    }
    else
    {
        <div class="list-group orders-list">
        @foreach (var order in ordersWithStatus)
        {
            <div class="list-group-item">
                <div class="col">
                    <h5>@order.Order.CreatedTime.ToLongDateString()</h5>
                    Items:
                    <strong>@order.Order.Pizzas.Count()</strong>
                    Total Price:
                    <strong>€@order.Order.GetFormattedTotalPrice()</strong>
                </div>
                <div class="col">
                    Status: <strong>@order.StatusText</strong>
                </div>
                <div class="col flex-grow-0">
                    <a href="myorders/@order.Order.OrderId" class="btn btn-success">
                        Track &gt;
                    </a>
                </div>
            </div>
        }
        </div>
    }
</div>
@code {
    IEnumerable<OrderWithStatus> ordersWithStatus;

    protected override async Task OnInitializedAsync()
    {
        ordersWithStatus = await OrdersClient.GetOrders();
    }

}